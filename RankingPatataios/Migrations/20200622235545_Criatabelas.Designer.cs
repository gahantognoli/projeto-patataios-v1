// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RankingPatataios.Data;

namespace RankingPatataios.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200622235545_Criatabelas")]
    partial class Criatabelas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RankingPatataios.Models.Jogador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Altura");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Backhand")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Empunhadura")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("RankingPatataios.Models.Jogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("Data");

                    b.Property<Guid>("RodadaId");

                    b.Property<int>("SetsGanhosJogador1");

                    b.Property<int>("SetsGanhosJogador2");

                    b.Property<string>("Testemunha")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("RodadaId");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("RankingPatataios.Models.JogoJogador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("JogadorId");

                    b.Property<Guid>("JogoId");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.HasIndex("JogoId");

                    b.ToTable("JogosJogadores");
                });

            modelBuilder.Entity("RankingPatataios.Models.Rodada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Status");

                    b.Property<Guid>("TorneioId");

                    b.HasKey("Id");

                    b.HasIndex("TorneioId");

                    b.ToTable("Rodadas");
                });

            modelBuilder.Entity("RankingPatataios.Models.Set", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GamesGanhosJogador1");

                    b.Property<int>("GamesGanhosJogador2");

                    b.Property<Guid>("JogoId");

                    b.Property<int>("Numero");

                    b.Property<int>("TieBreakJogador1");

                    b.Property<int>("TieBreakJogador2");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("RankingPatataios.Models.Torneio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Torneios");
                });

            modelBuilder.Entity("RankingPatataios.Models.Jogo", b =>
                {
                    b.HasOne("RankingPatataios.Models.Rodada", "Rodada")
                        .WithMany("Jogos")
                        .HasForeignKey("RodadaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RankingPatataios.Models.JogoJogador", b =>
                {
                    b.HasOne("RankingPatataios.Models.Jogador", "Jogador")
                        .WithMany("JogoJogadores")
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RankingPatataios.Models.Jogo", "Jogo")
                        .WithMany("JogoJogadores")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RankingPatataios.Models.Rodada", b =>
                {
                    b.HasOne("RankingPatataios.Models.Torneio", "Torneio")
                        .WithMany()
                        .HasForeignKey("TorneioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RankingPatataios.Models.Set", b =>
                {
                    b.HasOne("RankingPatataios.Models.Jogo", "Jogo")
                        .WithMany("Sets")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
